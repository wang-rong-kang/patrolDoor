<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unicom.patrolDoor.dao.TagMapper">
    <resultMap id="BaseResultMap" type="com.unicom.patrolDoor.entity.Tag">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="VARCHAR"/>
        <result column="statu" property="statu" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        name,
        gmt_create,
        gmt_modified,
        statu
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tag
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from tag
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.unicom.patrolDoor.entity.Tag">
        insert into tag (id, name, gmt_create,
                         gmt_modified, statu)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=VARCHAR},
                #{gmtModified,jdbcType=VARCHAR}, #{statu,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.unicom.patrolDoor.entity.Tag">
        insert into tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="statu != null">
                statu,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=VARCHAR},
            </if>
            <if test="statu != null">
                #{statu,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.unicom.patrolDoor.entity.Tag">
        update tag
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=VARCHAR},
            </if>
            <if test="statu != null">
                statu = #{statu,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.unicom.patrolDoor.entity.Tag">
        update tag
        set name         = #{name,jdbcType=VARCHAR},
            gmt_create   = #{gmtCreate,jdbcType=VARCHAR},
            gmt_modified = #{gmtModified,jdbcType=VARCHAR},
            statu        = #{statu,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="selectByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag
        where name = #{name}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag
        where 1=1
        <if test="statu != null">
            and statu = #{statu}
        </if>
        <if test="name != null">
            and name LIKE CONCAT('%',#{name} ,'%')
        </if>

        order by id desc
    </select>


    <select id="selectAllByStatu" resultType="java.util.Map">
        select
        id as value ,
        name as label
        from tag
        where 1=1
        <if test="statu != null">
            and statu = #{statu}
        </if>
    </select>




    <select id="selectAllByIdsAndNameAndStatu" resultMap="BaseResultMap">
        select
          id,
          name,
          gmt_create,
          gmt_modified,
          statu
        from tag
        where 1=1
        <if test="list != null and list.size()&gt; 0">
            and id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="statu != null">
            and statu = #{statu}
        </if>
        <if test="name != null and name!=''">
            and name LIKE CONCAT('%',#{name} ,'%')
        </if>

        order by id desc
    </select>
</mapper>